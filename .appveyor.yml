version: "{build}"

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_GENERATOR: Visual Studio 16 2019
      QT_BASEDIR: C:/Qt/5.9/msvc2017_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

configuration:
  - Release
#  - Debug

for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  install:
  # Make sure we get the bash that comes with git, not WSL bash
    - ps: $env:Path = "C:\msys64\bin;C:\Program Files\Git\bin;$env:Path"
  # Get and extract GLM
    - ps: new-item -itemtype directory -path C:\glm | out-null
    - ps: (new-object net.webclient).DownloadFile("https://github.com/g-truc/glm/releases/download/0.9.9.7/glm-0.9.9.7.zip", 'C:/glm.zip')
    - ps: expand-archive 'C:/glm.zip' -destinationpath 'C:\'
  # Get and extract Eigen
    - ps: new-item -itemtype directory -path C:\eigen | out-null
    - ps: (new-object net.webclient).DownloadFile("https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip", 'C:/eigen-src.zip')
    - ps: expand-archive 'C:/eigen-src.zip' -destinationpath 'C:\'
  # Install Eigen into its final prefix
    - cd C:\eigen-3.3.7
  # The following commented out command is toooo sloooow at the configuration stage. So we install the
  # headers manually, and also create a simple CMake config file that's sufficient for our needs.
  # Use this general command if you need to use newer Eigen version or if our config file ceases to be not sufficient:
  #  - mkdir build && cd build && cmake -G "%CMAKE_GENERATOR%" -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=C:/eigen .. && cmake --build . --target install
    - bash -c "mkdir -pv /c/eigen/{include/eigen3,share/eigen3/cmake}"
    - bash -c "find Eigen unsupported/Eigen -not -name '*.txt' | tar cf - -T - | tar xf - -C /c/eigen/include/eigen3"
    - bash -c "echo $'find_path(EIGEN3_INCLUDE_DIR Eigen/Core PATHS c:/eigen/include/eigen3)\nif(EIGEN3_INCLUDE_DIR)\nset(Eigen3_FOUND 1)\nelse()\nset(Eigen3_FOUND 0)\nendif()\n' > /c/eigen/share/eigen3/cmake/Eigen3Config.cmake"

  before_build:
    - cd C:/projects && mkdir build && mkdir install && cd build
    - cmake -G "%CMAKE_GENERATOR%" -DADD_CXX_FLAGS="/IC:/glm" -DCMAKE_PREFIX_PATH="%QT_BASEDIR%/lib/cmake/Qt5;C:/eigen/share/eigen3/cmake" -DCMAKE_INSTALL_PREFIX=../install ../CalcMySky

  build_script:
      - cmake --build . --config %configuration% -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

  test_script:
      - set PATH=%PATH%;%QT_BASEDIR%\bin
      - ctest -C %configuration%

  after_build:
    - if Release == %configuration%  cmake --build . --config %configuration% --target install
    - if Release == %configuration%  7z a CalcMySky-windows64.zip ../install/CalcMySky
    - if Release == %configuration%  7z l CalcMySky-windows64.zip

    - if  Debug  == %configuration%  cmake --build . --config %configuration% --target install
    - if  Debug  == %configuration%  for %%F in (msvcp140d vcruntime140d) do copy "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\redist\debug_nonredist\x64\Microsoft.VC140.DebugCRT\%%F.dll" CalcMySky
    - if  Debug  == %configuration%  copy "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Redist\MSVC\14.25.28508\debug_nonredist\x64\Microsoft.VC142.DebugCRT\vcruntime140_1d.dll" CalcMySky
    - if  Debug  == %configuration%  copy "C:\Program Files (x86)\Windows Kits\10\bin\x64\ucrt\ucrtbased.dll" CalcMySky
    - if  Debug  == %configuration%  cp -v \"/c/Program Files (x86)/Windows Kits/10/bin/x64/ucrt/ucrtbased.dll\" CalcMySky
    - if  Debug  == %configuration%  7z a CalcMySky-windows64.zip CalcMySky

    - appveyor PushArtifact CalcMySky-windows64.zip

-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
  install:
    - sudo apt-get update
    - sudo apt-get install -y libeigen3-dev libglm-dev libqt5opengl5-dev
  before_build:
    - cd ~/projects/ && mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_INSTALL_PREFIX="$PWD/install/CalcMySky" ../calcmysky -DCMAKE_CXX_COMPILER=g++-9
  build_script:
    - cmake --build .
  test_script:
    - ctest || { cat Testing/Temporary/LastTest.log; false; }
  after_build:
    - cmake --build . --target install
    - tar cvJf CalcMySky-linux-amd64.tar.xz -C install CalcMySky
    - appveyor PushArtifact CalcMySky-linux-amd64.tar.xz

-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
  install:
    - brew install glm eigen
  before_build:
    - cd ~/projects/ && mkdir build && cd build
    - export qtPath=$HOME/Qt/6.2/macos
    - export PATH=$qtPath/bin:$PATH
    - cmake ../calcmysky -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_INSTALL_PREFIX="$PWD/install/CalcMySky" -DQT_VERSION=6 -DCMAKE_PREFIX_PATH="$(echo /usr/local/Cellar/eigen/*/share/eigen3/cmake);$qtPath/lib/cmake/Qt6" -DCMAKE_CXX_FLAGS="-I$(echo /usr/local/Cellar/glm/*/include) -Wno-string-plus-int"
  build_script:
    - cmake --build .
  test_script:
    - ctest || { cat Testing/Temporary/LastTest.log; false; }
  after_build:
    - cmake --build . --target install
    - tar cvJf CalcMySky-macos-amd64.tar.xz -C install CalcMySky
    - appveyor PushArtifact CalcMySky-macos-amd64.tar.xz
