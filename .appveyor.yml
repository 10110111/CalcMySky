version: "{build}"

environment:
  matrix:
    - BUILD_NAME: Win32 Qt5
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017
      QT_BASEDIR: C:/Qt/5.12/msvc2017
      QT_VERSION_MAJOR: 5
      BITS: 32
    - BUILD_NAME: Win64 Qt5
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017
      QT_BASEDIR: C:/Qt/5.12/msvc2017_64
      QT_VERSION_MAJOR: 5
      BITS: 64
      CMAKE_ARGS: -A x64
    - BUILD_NAME: Win64 Qt6
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_GENERATOR: Visual Studio 16 2019
      QT_BASEDIR: C:/Qt/6.5/msvc2019_64
      QT_VERSION_MAJOR: 6
      BITS: 64
    - BUILD_NAME: Ubuntu amd64 Qt5
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      QT_BASEDIR: /usr
      QT_VERSION_MAJOR: 5
    - BUILD_NAME: Ubuntu amd64 Qt6
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      QT_BASEDIR: /home/appveyor/Qt/6.3/gcc_64
      QT_VERSION_MAJOR: 6
    - BUILD_NAME: macOS amd64 Qt5
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      QT_BASEDIR: /Users/appveyor/Qt/5.15/clang_64
      QT_VERSION_MAJOR: 5
    - BUILD_NAME: macOS amd64 Qt6
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      QT_BASEDIR: /Users/appveyor/Qt/6.2/macos
      QT_VERSION_MAJOR: 6

configuration:
  - Release
#  - Debug

for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  install:
  # Make sure we get the bash that comes with git, not WSL bash
    - ps: $env:Path = "C:\msys64\bin;C:\Program Files\Git\bin;$env:Path"

  before_build:
    - cd C:/projects && mkdir build && mkdir install && cd build
    - set PATH=%QT_BASEDIR%\bin;%PATH%
    - cmake -G "%CMAKE_GENERATOR%" -DCMAKE_INSTALL_PREFIX=../install ../CalcMySky -DQT_VERSION=%QT_VERSION_MAJOR% %CMAKE_ARGS%

  build_script:
    - cmake --build . --config %configuration% -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

  test_script:
    - set PATH=%PATH%;%QT_BASEDIR%\bin
    - ctest -C %configuration%

  after_build:
    - if Release == %configuration%  cmake --build . --config %configuration% --target install
    - if Release == %configuration%  bash -c "sed -n 's@.* PROJECT_VERSION *= *\"\(.*\)\".*@\1@p' version.cpp > versionVar"
    - if Release == %configuration%  set /p projectVersion=<versionVar
    - if Release == %configuration%  set platform=win%BITS%-qt%QT_VERSION_MAJOR%
    - if Release == %configuration%  set tarballBaseName=CalcMySky-%projectVersion%-%platform%
    - if Release == %configuration%  echo %tarballBaseName%
    - if Release == %configuration%  bash -c "mv -v ../install/CalcMySky ../install/$tarballBaseName"
    - if Release == %configuration%  7z a CalcMySky-%projectVersion%-%platform%.zip ../install/CalcMySky-%projectVersion%-%platform%
    - if Release == %configuration%  7z l CalcMySky-%projectVersion%-%platform%.zip
    - if Release == %configuration%  appveyor PushArtifact CalcMySky-%projectVersion%-%platform%.zip

    - if  Debug  == %configuration%  cmake --build . --config %configuration% --target install
    - if  Debug  == %configuration%  for %%F in (msvcp140d vcruntime140d) do copy "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\redist\debug_nonredist\x64\Microsoft.VC140.DebugCRT\%%F.dll" CalcMySky
    - if  Debug  == %configuration%  copy "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Redist\MSVC\14.25.28508\debug_nonredist\x64\Microsoft.VC142.DebugCRT\vcruntime140_1d.dll" CalcMySky
    - if  Debug  == %configuration%  copy "C:\Program Files (x86)\Windows Kits\10\bin\x64\ucrt\ucrtbased.dll" CalcMySky
    - if  Debug  == %configuration%  cp -v \"/c/Program Files (x86)/Windows Kits/10/bin/x64/ucrt/ucrtbased.dll\" CalcMySky
    - if  Debug  == %configuration%  7z a CalcMySky-win%BITS%-qt%QT_VERSION_MAJOR%.zip CalcMySky
    - if  Debug  == %configuration%  7z l CalcMySky-win%BITS%-qt%QT_VERSION_MAJOR%.zip
    - if  Debug  == %configuration%  appveyor PushArtifact CalcMySky-win%BITS%-qt%QT_VERSION_MAJOR%.zip

-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
  install:
    - sudo apt-get update --allow-releaseinfo-change
    - if [[ $QT_VERSION_MAJOR = 5 ]]; then sudo apt-get install -y libeigen3-dev libglm-dev libqt5opengl5-dev; fi
    - if [[ $QT_VERSION_MAJOR = 6 ]]; then sudo apt-get install -y libeigen3-dev libglm-dev libgl1-mesa-dev; fi
  before_build:
    - cd ~/projects/ && mkdir build && cd build
    - export PATH="$QT_BASEDIR/bin:$PATH"
    - cmake -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_INSTALL_PREFIX="$PWD/install/CalcMySky" ../calcmysky -DCMAKE_CXX_COMPILER=g++-9 -DQT_VERSION=$QT_VERSION_MAJOR -DCPM_LOCAL_PACKAGES_ONLY=true
  build_script:
    - cmake --build .
  test_script:
    - ctest || { cat Testing/Temporary/LastTest.log; false; }
  after_build:
    - cmake --build . --target install
    - projectVersion=$(sed -n 's@.* PROJECT_VERSION *= *"\([^"]\+\)" *;@\1@p' version.cpp)
    - platform=linux-amd64-qt$QT_VERSION_MAJOR
    - tarballBaseName="CalcMySky-$projectVersion-$platform"
    - mv -v install/CalcMySky "install/$tarballBaseName"
    - tar cvJf "$tarballBaseName.tar.xz" -C install "$tarballBaseName"
    - appveyor PushArtifact "$tarballBaseName.tar.xz"

-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
  before_build:
    - cd ~/projects/ && mkdir build && cd build
    - export PATH=$QT_BASEDIR/bin:$PATH
    - cmake ../calcmysky -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_INSTALL_PREFIX="$PWD/install/CalcMySky" -DQT_VERSION=$QT_VERSION_MAJOR -DCMAKE_CXX_FLAGS="-Wno-string-plus-int"
  build_script:
    - cmake --build .
  test_script:
    - ctest || { cat Testing/Temporary/LastTest.log; false; }
  after_build:
    - cmake --build . --target install
    - projectVersion=$(sed -n 's@.* PROJECT_VERSION *= *"\([^"][^"]*\)" *;@\1@p' version.cpp)
    - platform=macos-amd64-qt$QT_VERSION_MAJOR
    - tarballBaseName="CalcMySky-$projectVersion-$platform"
    - mv -v install/CalcMySky "install/$tarballBaseName"
    - tar cvJf "$tarballBaseName.tar.xz" -C install "$tarballBaseName"
    - appveyor PushArtifact "$tarballBaseName.tar.xz"
